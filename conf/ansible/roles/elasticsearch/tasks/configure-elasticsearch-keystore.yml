- name: Add access key to Elasticsearch keystore (production)
  ansible.builtin.command: |
    echo '{{ sourced_env.ELASTICSEARCH_NEWSSCRIBE_SNAPSHOT_B2_ACCESS_KEY }}' | ./elasticsearch-keystore add -f -x --stdin s3.client.default.access_key
  args:
    chdir: /usr/share/elasticsearch/bin
  when: not is_staging_or_local | bool
  become: true

- name: Add access key to Elasticsearch keystore (staging or local)
  community.docker.docker_container_exec:
    container: {{ node.name }}
    argv:
      - echo '{{ sourced_env.ELASTICSEARCH_NEWSSCRIBE_SNAPSHOT_B2_ACCESS_KEY }}' | ./elasticsearch-keystore add -f -x --stdin s3.client.default.access_key
    chdir: /usr/share/elasticsearch/bin
  loop: "{{ docker_elasticsearch_nodes }}"
  loop_control:
    loop_var: node
  when: is_staging_or_local | bool
  become: true

- name: Add secret key to Elasticsearch keystore (production)
  ansible.builtin.command: |
    echo '{{ sourced_env.ELASTICSEARCH_NEWSSCRIBE_SNAPSHOT_B2_SECRET_KEY  }}' | ./elasticsearch-keystore add -f -x --stdin s3.client.default.secret_key
  args:
    chdir: /usr/share/elasticsearch/bin
  when: not is_staging_or_local | bool
  become: true

- name: Add secret key to Elasticsearch keystore (staging or local)
  community.docker.docker_container_exec:
    container: {{ node.name }}
    argv:
      echo '{{ sourced_env.ELASTICSEARCH_NEWSSCRIBE_SNAPSHOT_B2_SECRET_KEY  }}' | ./elasticsearch-keystore add -f -x --stdin s3.client.default.secret_key
    chdir: /usr/share/elasticsearch/bin
  loop: "{{ docker_elasticsearch_nodes }}"
  loop_control:
    loop_var: node
  when: is_staging_or_local | bool
  become: true

- name: Reload secure settings
  ansible.builtin.uri:
    url: "{{ es_api_scheme }}://{{ es_api_host }}:{{ es_api_port }}/_nodes/reload_secure_settings?pretty"
    method: POST
    status_code: 200
    timeout: 30
    headers:
      Content-Type: "application/json"
  register: reload_secure_settings
  retries: 6
  delay: 10
  until: reload_secure_settings.status == 200
  when: not ansible_check_mode