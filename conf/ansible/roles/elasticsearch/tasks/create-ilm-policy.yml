- name: Set es_api_port for dev/staging (first node)
  ansible.builtin.set_fact:
    es_api_port: "{{ docker_elasticsearch_nodes[0].mc_es_http_port }}"
  when: is_staging_or_local | bool
  tags: always

- name: Create/Update ILM policy using Elasticsearch API
  ansible.builtin.uri:
    url: "{{ es_api_scheme }}://{{ es_api_host }}:{{ es_api_port }}/_ilm/policy/{{ mc_es_ilm_policy_name }}"
    method: PUT
    body: "{{ lookup('template', '../roles/elasticsearch/templates/ilm.policy.json.j2') }}"
    body_format: json
    status_code: 200
    timeout: 30
    headers:
      Content-Type: "application/json"
  register: ilm_creation
  retries: 6
  delay: 10
  until: ilm_creation.status == 200
  when: not ansible_check_mode

- name: Show what would be changed in check mode
  ansible.builtin.debug:
    msg: "Would ensure ILM policy '{{ mc_es_ilm_policy_name }}' exists with proper configuration"
  when: ansible_check_mode

- name: Get ILM policy for validation
  ansible.builtin.uri:
    url: "{{ es_api_scheme }}://{{ es_api_host }}:{{ es_api_port }}/_ilm/policy/{{ mc_es_ilm_policy_name }}"
    method: GET
    status_code: 200
    headers:
      Content-Type: "application/json"
  register: ilm_validation
  when: not ansible_check_mode

- name: Verify ILM policy configuration
  ansible.builtin.assert:
    that:
      - ilm_validation.status == 200
      - ilm_validation.json is defined
    success_msg: "ILM policy '{{ mc_es_ilm_policy_name }}' is properly configured"
    fail_msg: "ILM policy validation failed for '{{ mc_es_ilm_policy_name }}'"
  when: not ansible_check_mode
