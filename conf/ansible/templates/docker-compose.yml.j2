services:
{% for node in docker_elasticsearch_nodes %}
  {{ node.name }}:
    image: docker.elastic.co/elasticsearch/elasticsearch:{{ es_version }}
    container_name: es-node-{{ '%02d' | format(loop.index) }}
    environment:
      node.name: "{{ node.name }}"
{% for key, value in es_config.items() %}
{% if value is mapping or (value is iterable and value is not string) %}
      {{ key }}: "{{ value | join(',') }}"
{% else %}
      {{ key }}: "{{ value }}"
{% endif %}
{% endfor %}
      ES_JAVA_OPTS: "-Xms{{ es_heap_size }} -Xmx{{ es_heap_size }}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - {{ node.name }}-data:/usr/share/elasticsearch/data
    ports:
      - "{{ node.mc_es_http_port }}:9200"
      - "{{ node.mc_es_transport_port }}:9300"
    networks:
      - elastic-network
{% endfor %}

volumes:
{% for node in docker_elasticsearch_nodes %}
  {{ node.name }}-data:
{% if env is defined and env == 'staging' %}
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "{{ volume_device_prefix }}/{{ node.name }}/data"
{% endif %}
{% endfor %}

networks:
  elastic-network:
    driver: bridge
